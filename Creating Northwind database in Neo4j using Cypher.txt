                        Creating Northwind database in Neo4j using Cypher
------------------------------------------------------------------------------------------------------

// Create products

LOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/products.csv" AS row
CREATE (n:Product)
SET n = row,
  n.unitPrice = toFloat(row.unitPrice),
  n.unitsInStock = toInteger(row.unitsInStock), n.unitsOnOrder = toInteger(row.unitsOnOrder),
  n.reorderLevel = toInteger(row.reorderLevel), n.discontinued = (row.discontinued <> "0")

// Create categories

LOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/categories.csv" AS row
CREATE (n:Category)
SET n = row

// Create suppliers

LOAD CSV WITH HEADERS FROM "http://data.neo4j.com/northwind/suppliers.csv" AS row
CREATE (n:Supplier)
SET n = row

// Create customers

LOAD CSV WITH HEADERS FROM " http://data.neo4j.com/northwind/customers.csv" AS row
CREATE (n:Customer)
SET n = row

// Create employees

LOAD CSV WITH HEADERS FROM " http://data.neo4j.com/northwind/employees.csv" AS row
CREATE (n:Employee)
SET n = row

// Create Orders

LOAD CSV WITH HEADERS FROM " http://data.neo4j.com/northwind/orders.csv" AS row
CREATE (n:Order)
SET n = row

LOAD CSV WITH HEADERS FROM " http://data.neo4j.com/northwind/order-details.csv" AS row
CREATE (n:OrderDetails)
SET n = row


-----------------------------------------------------------------------------------------------------

// Create Indexes on the created nodes

CREATE INDEX ON :Product(productID);

CREATE INDEX ON :Product(productName);

CREATE INDEX ON :Category(categoryID);

CREATE INDEX ON :Employee(employeeID);

CREATE INDEX ON :Supplier(supplierID);

CREATE INDEX ON :Customer(customerID);

CREATE INDEX ON :Customer(customerName);

-------------------------------------------------------------------------------------------------------

// Creating Relationships between Products and Category

MATCH (p:Product),(c:Category)
WHERE p.categoryID = c.categoryID
CREATE (p)-[:PART_OF]->(c)

// Creating Relationships between Product and Supplier 

MATCH (p:Product),(s:Supplier)
WHERE p.supplierID = s.supplierID
CREATE (s)-[:SUPPLIES]->(p)

// Creating Relationships between Product and Order Details

MATCH (p:Product), (od:OrderDetails)
WHERE p.productID = od.productID 
CREATE (od)-[details:ORDERS]->(p)

// Creating Relationships between Employee and Order

MATCH (e:Employee),(o:Order)
WHERE e.employeeID = o.employeeID
CREATE (e)-[:COLLECTS]->(o)

// Creating Relationships between Customer and Order

MATCH (c:Customer),(o:Order)
WHERE c.customerID = o.customerID
CREATE (s)-[:COLLECTS]->(p)

// Creating Relationships between Order details and Order

MATCH (od:OrderDetails), (o:Order)
WHERE od.orderID = o.orderID 
CREATE (od)-[:PART_OF]->(o)


------------------------------------------------------------------------------------------------------


MATCH (p:Product)
WHERE p.unitsInStock < 5
RETURN p.productName AS ProductName, p.unitsInStock AS UnitsInStock, 
p.reorderLevel AS ReorderLevel,p.unitsOnOrder AS UnitsOnOrder;


MATCH (p:Product)
WHERE p.discontinued = TRUE
RETURN p.productName AS ProductName, p.unitsInStock AS UnitsInStock,
p.unitsInStock*p.unitPrice AS TotalUnitCost;

MATCH (p:Product)
WHERE p.unitsInStock < p.reorderLevel
RETURN p.productName AS ProductName, p.unitsInStock AS UnitsInStock,
p.unitsOnOrder AS UnitsInOrder;


MATCH (o:Order)<--(o:Order)<--(od:OrderDetails)<--(p:Product)
WHERE p.dicontinued = TRUE
RETURN distinct o.Orderdate;


